monthly_temp   <- MTEMP
sowing_date    <- SOWING_DOY
sowing_month   <- SOWING_MONTH
sowing_season  <- SOWING_SEASON
seasonality    <- SEASONALITY
harvest_rule   <- HARVEST_RULE
hd_vector      <- HARVEST_VECTOR
hd_vector
# Extract individual parameter names and values
for (i in colnames(croppar)) {
assign(i, croppar[[i]])
}
# Extract individual individual values from hd_vector
for (i in names(hd_vector)) {
assign(i, hd_vector[i])
}
hd_vector_rf <- hd_vector_ir <- rep(NA, 6)
names(hd_vector_rf) <- names(hd_vector_ir) <- c("hd_first", "hd_maxrp", "hd_last",
"hd_wetseas", "hd_temp_base", "hd_temp_opt")
hd_vector_rf
seasonality == "NO_SEASONALITY"
seasonality == "PREC"
sowing_season == "winter"
# hd_vector <- c(hd_first, NA, hd_last, NA, hd_temp_base, hd_temp_opt)
hd_vector_rf[c("hd_first", "hd_last", "hd_wetseas", "hd_temp_base", "hd_temp_opt")] <- hd_vector[c("hd_first", "hd_last",  "hd_wetseas", "hd_temp_base", "hd_temp_opt")]
hd_vector_rf
hd_vector_ir[c("hd_first", "hd_last", "hd_temp_base", "hd_temp_opt")] <- hd_vector[c("hd_first", "hd_last", "hd_temp_base", "hd_temp_opt")]
hd_vector_ir
harvest_rule
hd_first, hd_temp_opt
max(hd_first, hd_wetseas)
hd_first
hd_wetseas
hd_first
hd_wetseas
hd_last
harvest_reason_rf
# return which harvest reason was choosen
harvest_reason_rf <- which(hd_vector_rf==hd_rf)
# hd_vector <- c(hd_first, NA, hd_last, NA, hd_temp_base, hd_temp_opt)
hd_vector_rf[c("hd_first", "hd_last", "hd_wetseas", "hd_temp_base", "hd_temp_opt")] <- hd_vector[c("hd_first", "hd_last",  "hd_wetseas", "hd_temp_base", "hd_temp_opt")]
hd_vector_ir[c("hd_first", "hd_last", "hd_temp_base", "hd_temp_opt")] <- hd_vector[c("hd_first", "hd_last", "hd_temp_base", "hd_temp_opt")]
if (harvest_rule==3) {
hd_rf <- hd_first
hd_ir <- hd_first
} else if (harvest_rule==6){
if (sowing_month==0 && max(monthly_temp) < temp_spring) {
hd_rf <- hd_first
hd_ir <- hd_first
} else {
hd_rf <- min(max(hd_first, hd_temp_base), max(hd_first, hd_wetseas), hd_last)
hd_ir <- min(max(hd_first, hd_temp_base), hd_last)
}
} else { #harvest_rule[cft]==9
hd_rf <- min(max(hd_first, hd_temp_opt), max(hd_first, hd_wetseas), hd_last)
hd_ir <- min(max(hd_first, hd_temp_opt), hd_last)
}
# return which harvest reason was choosen
harvest_reason_rf <- which(hd_vector_rf==hd_rf)
harvest_reason_ir <- which(hd_vector_ir==hd_ir)
harvest_reason_rf
hd_vector_rf
#-----------------------------------------------------------#
# Climate-driven sowing and harvest dates                   #
# R-Code                                                    #
# Written by Sara Minoli                                    #
# Based on Minoli et al. (2019) Global and Planetary Change #
#-----------------------------------------------------------#
#-----------------------------------------------------------#
# MAIN SCRIPT #
#-----------------------------------------------------------#
rm(list=ls(all=TRUE))
working.dir <- "D:/PROJECTS/GROWING_PERIODS_PACKAGE/"
# READ CONFIGURATION ----
#___________________________________________________________#
source(paste0(working.dir, "CODE/configuration/configuration.R"))
# IMPORT FUNCTIONS ----
#___________________________________________________________#
#source(paste0(working.dir, "CODE/src/compute_sow_harv_functions.R"))
source(paste0(working.dir, "CODE/src/simplified_functions_workinprogress.R"))
# SELECT SCENARIO ----
#___________________________________________________________#
# import argument from bash script
args <- 3
# select variable, crop, model
dbatch1 <- subset(dbatch, subset = (step1!=0)) # remove scenarios that are not needed in step1 pre-lpjml
rownames(dbatch1) <- NULL
dbatch2 <- dbatch1[args,]
GCM <- dbatch2$gcm
SCgp <- dbatch2$scenario.growp
SYgp <- dbatch2$syear.growp
EYgp <- dbatch2$eyear.growp
SCclm <- dbatch2$scenario.clm
SYclm <- dbatch2$syear.clm
EYclm <- dbatch2$eyear.clm
print(dbatch2)
# IMPORT CLIMATE DATA ----
#___________________________________________________________#
# get monthly climate data
cat(paste("Importing climate data of:", GCM, SCgp, SYgp, EYgp),
"-------------------------------------------------------", sep = "\n")
DTclm <- get(load(file = paste0(climate.dir, "DT_average_monthly_climate_", GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata")))
print(DTclm)
# LOOP OVER CROPS ----
#___________________________________________________________#
CROP <- "Maize"
# Get crop-specific parameters
crop_parameters <- subset(crop_parameters_all, subset = crop_name %in% CROP)
# LOOP OVER GRID ----
#___________________________________________________________#
#COORD <- 27997 # 46685
OUTPUT_DF <- NULL
for (COORD in c(1:NCELLS)) { # NCELLS
# Get coordinates of the grid cell
LON <- coord.df$lon[COORD]
LAT <- coord.df$lat[COORD]
# Get weather data of the grid cell
MTEMP <- DTclm[lon==LON & lat==LAT]$tas
MPREC <- DTclm[lon==LON & lat==LAT]$pr
MPPET <- DTclm[lon==LON & lat==LAT]$ppet
MPPET_DIFF <- MPPET-c(MPPET[-1], MPPET[1])
#print(DTclm[lon==LON & lat==LAT])
SEASONALITY <- calcSeasonality(MTEMP, MPPET, TEMPMIN)
SOWING <- calcSowingDate(crop_parameters, MTEMP, MPPET, SEASONALITY, LAT)
SOWING_MONTH  <- SOWING[["sowing_month"]]
SOWING_DOY    <- SOWING[["sowing_doy"]]
SOWING_SEASON <- SOWING[["sowing_season"]]
HARVEST_RULE  <- calcHarvestRule(crop_parameters, MTEMP, MPPET, SEASONALITY)
HARVEST_VECTOR  <- calcHarvestDateVector(crop_parameters, SOWING_DOY, SOWING_SEASON, MTEMP, MPPET, MPPET_DIFF)
HARVEST <- calcHarvestDate(crop_parameters, MTEMP, SOWING_DOY, SOWING_MONTH, SOWING_SEASON, SEASONALITY, HARVEST_RULE, HARVEST_VECTOR)
HARVEST_DAY_RF  <- HARVEST[["hd_rf"]]
HARVEST_DAY_IR  <- HARVEST[["hd_ir"]]
HARVEST_REAS_RF <- HARVEST[["harvest_reason_rf"]]
HARVEST_REAS_IR <- HARVEST[["harvest_reason_ir"]]
PIXEL_DF <- data.frame("lon" =    rep(LON, 2),
"lat" =    rep(LAT, 2),
"cft_id" = rep(crop_parameters$cft_id, 2),
"crop" =   rep(crop_parameters$crop_name, 2),
"water_mng" = c("rainfed", "irrigated"),
"seasonality_type" = rep(SEASONALITY, 2),
"sowing_season" =    rep(SOWING_SEASON, 2),
"sowing_month" =     rep(SOWING_MONTH, 2),
"sowing_doy" =       rep(SOWING_DOY, 2),
"harvest_rule" =     rep(HARVEST_RULE, 2),
"harvest_reason" = c(HARVEST_REAS_RF, HARVEST_REAS_IR),
"maturity_doy" =   c(HARVEST_DAY_RF, HARVEST_DAY_IR)  )
OUTPUT_DF <- rbind(OUTPUT_DF, PIXEL_DF)
} # COORD
COORD
67420*2/7270
#-----------------------------------------------------------#
# Climate-driven sowing and harvest dates                   #
# R-Code                                                    #
# Written by Sara Minoli                                    #
# Based on Minoli et al. (2019) Global and Planetary Change #
#-----------------------------------------------------------#
#-----------------------------------------------------------#
# MAIN SCRIPT #
#-----------------------------------------------------------#
rm(list=ls(all=TRUE))
working.dir <- "D:/PROJECTS/GROWING_PERIODS_PACKAGE/"
# READ CONFIGURATION ----
#___________________________________________________________#
source(paste0(working.dir, "CODE/configuration/configuration.R"))
# IMPORT FUNCTIONS ----
#___________________________________________________________#
#source(paste0(working.dir, "CODE/src/compute_sow_harv_functions.R"))
source(paste0(working.dir, "CODE/src/simplified_functions_workinprogress.R"))
# SELECT SCENARIO ----
#___________________________________________________________#
# import argument from bash script
args <- 3
# select variable, crop, model
dbatch1 <- subset(dbatch, subset = (step1!=0)) # remove scenarios that are not needed in step1 pre-lpjml
rownames(dbatch1) <- NULL
dbatch2 <- dbatch1[args,]
GCM <- dbatch2$gcm
SCgp <- dbatch2$scenario.growp
SYgp <- dbatch2$syear.growp
EYgp <- dbatch2$eyear.growp
SCclm <- dbatch2$scenario.clm
SYclm <- dbatch2$syear.clm
EYclm <- dbatch2$eyear.clm
print(dbatch2)
# IMPORT CLIMATE DATA ----
#___________________________________________________________#
# get monthly climate data
cat(paste("Importing climate data of:", GCM, SCgp, SYgp, EYgp),
"-------------------------------------------------------", sep = "\n")
DTclm <- get(load(file = paste0(climate.dir, "DT_average_monthly_climate_", GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata")))
print(DTclm)
# LOOP OVER CROPS ----
#___________________________________________________________#
CROP <- "Maize"
# Get crop-specific parameters
crop_parameters <- subset(crop_parameters_all, subset = crop_name %in% CROP)
# LOOP OVER GRID ----
#___________________________________________________________#
#COORD <- 27997 # 46685
OUTPUT_DF <- NULL
for (COORD in c(1:NCELLS)) { # NCELLS
# Get coordinates of the grid cell
LON <- coord.df$lon[COORD]
LAT <- coord.df$lat[COORD]
# Get weather data of the grid cell
MTEMP <- DTclm[lon==LON & lat==LAT]$tas
MPREC <- DTclm[lon==LON & lat==LAT]$pr
MPPET <- DTclm[lon==LON & lat==LAT]$ppet
MPPET_DIFF <- MPPET-c(MPPET[-1], MPPET[1])
#print(DTclm[lon==LON & lat==LAT])
SEASONALITY <- calcSeasonality(MTEMP, MPPET, TEMPMIN)
SOWING <- calcSowingDate(crop_parameters, MTEMP, MPPET, SEASONALITY, LAT)
SOWING_MONTH  <- SOWING[["sowing_month"]]
SOWING_DOY    <- SOWING[["sowing_doy"]]
SOWING_SEASON <- SOWING[["sowing_season"]]
HARVEST_RULE  <- calcHarvestRule(crop_parameters, MTEMP, MPPET, SEASONALITY)
HARVEST_VECTOR  <- calcHarvestDateVector(crop_parameters, SOWING_DOY, SOWING_SEASON, MTEMP, MPPET, MPPET_DIFF)
HARVEST <- calcHarvestDate(crop_parameters, MTEMP, SOWING_DOY, SOWING_MONTH, SOWING_SEASON, SEASONALITY, HARVEST_RULE, HARVEST_VECTOR)
HARVEST_DAY_RF  <- HARVEST[["hd_rf"]]
HARVEST_DAY_IR  <- HARVEST[["hd_ir"]]
HARVEST_REAS_RF <- HARVEST[["harvest_reason_rf"]]
HARVEST_REAS_IR <- HARVEST[["harvest_reason_ir"]]
PIXEL_DF <- data.frame("lon" =    rep(LON, 2),
"lat" =    rep(LAT, 2),
"cft_id" = rep(crop_parameters$cft_id, 2),
"crop" =   rep(crop_parameters$crop_name, 2),
"water_mng" = c("rainfed", "irrigated"),
"seasonality_type" = rep(SEASONALITY, 2),
"sowing_season" =    rep(SOWING_SEASON, 2),
"sowing_month" =     rep(SOWING_MONTH, 2),
"sowing_doy" =       rep(SOWING_DOY, 2),
"harvest_rule" =     rep(HARVEST_RULE, 2),
"harvest_reason" = c(HARVEST_REAS_RF, HARVEST_REAS_IR),
"maturity_doy" =   c(HARVEST_DAY_RF, HARVEST_DAY_IR)  )
OUTPUT_DF <- rbind(OUTPUT_DF, PIXEL_DF)
} # COORD
cat(paste(COORD, sep = "\t"))
#-----------------------------------------------------------#
# Climate-driven sowing and harvest dates                   #
# R-Code                                                    #
# Written by Sara Minoli                                    #
# Based on Minoli et al. (2019) Global and Planetary Change #
#-----------------------------------------------------------#
#-----------------------------------------------------------#
# MAIN SCRIPT #
#-----------------------------------------------------------#
rm(list=ls(all=TRUE))
working.dir <- "D:/PROJECTS/GROWING_PERIODS_PACKAGE/"
# READ CONFIGURATION ----
#___________________________________________________________#
source(paste0(working.dir, "CODE/configuration/configuration.R"))
# IMPORT FUNCTIONS ----
#___________________________________________________________#
#source(paste0(working.dir, "CODE/src/compute_sow_harv_functions.R"))
source(paste0(working.dir, "CODE/src/simplified_functions_workinprogress.R"))
# SELECT SCENARIO ----
#___________________________________________________________#
# import argument from bash script
args <- 3
# select variable, crop, model
dbatch1 <- subset(dbatch, subset = (step1!=0)) # remove scenarios that are not needed in step1 pre-lpjml
rownames(dbatch1) <- NULL
dbatch2 <- dbatch1[args,]
GCM <- dbatch2$gcm
SCgp <- dbatch2$scenario.growp
SYgp <- dbatch2$syear.growp
EYgp <- dbatch2$eyear.growp
SCclm <- dbatch2$scenario.clm
SYclm <- dbatch2$syear.clm
EYclm <- dbatch2$eyear.clm
print(dbatch2)
# IMPORT CLIMATE DATA ----
#___________________________________________________________#
# get monthly climate data
cat(paste("Importing climate data of:", GCM, SCgp, SYgp, EYgp),
"-------------------------------------------------------", sep = "\n")
DTclm <- get(load(file = paste0(climate.dir, "DT_average_monthly_climate_", GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata")))
print(DTclm)
# LOOP OVER CROPS ----
#___________________________________________________________#
CROP <- "Maize"
# Get crop-specific parameters
crop_parameters <- subset(crop_parameters_all, subset = crop_name %in% CROP)
# LOOP OVER GRID ----
#___________________________________________________________#
#COORD <- 27997 # 46685
OUTPUT_DF <- NULL
for (COORD in c(1:NCELLS)) { # NCELLS
# Get coordinates of the grid cell
LON <- coord.df$lon[COORD]
LAT <- coord.df$lat[COORD]
# Get weather data of the grid cell
MTEMP <- DTclm[lon==LON & lat==LAT]$tas
MPREC <- DTclm[lon==LON & lat==LAT]$pr
MPPET <- DTclm[lon==LON & lat==LAT]$ppet
MPPET_DIFF <- MPPET-c(MPPET[-1], MPPET[1])
#print(DTclm[lon==LON & lat==LAT])
SEASONALITY <- calcSeasonality(MTEMP, MPPET, TEMPMIN)
SOWING <- calcSowingDate(crop_parameters, MTEMP, MPPET, SEASONALITY, LAT)
SOWING_MONTH  <- SOWING[["sowing_month"]]
SOWING_DOY    <- SOWING[["sowing_doy"]]
SOWING_SEASON <- SOWING[["sowing_season"]]
HARVEST_RULE  <- calcHarvestRule(crop_parameters, MTEMP, MPPET, SEASONALITY)
HARVEST_VECTOR  <- calcHarvestDateVector(crop_parameters, SOWING_DOY, SOWING_SEASON, MTEMP, MPPET, MPPET_DIFF)
HARVEST <- calcHarvestDate(crop_parameters, MTEMP, SOWING_DOY, SOWING_MONTH, SOWING_SEASON, SEASONALITY, HARVEST_RULE, HARVEST_VECTOR)
HARVEST_DAY_RF  <- HARVEST[["hd_rf"]]
HARVEST_DAY_IR  <- HARVEST[["hd_ir"]]
HARVEST_REAS_RF <- HARVEST[["harvest_reason_rf"]]
HARVEST_REAS_IR <- HARVEST[["harvest_reason_ir"]]
PIXEL_DF <- data.frame("lon" =    rep(LON, 2),
"lat" =    rep(LAT, 2),
"cft_id" = rep(crop_parameters$cft_id, 2),
"crop" =   rep(crop_parameters$crop_name, 2),
"water_mng" = c("rainfed", "irrigated"),
"seasonality_type" = rep(SEASONALITY, 2),
"sowing_season" =    rep(SOWING_SEASON, 2),
"sowing_month" =     rep(SOWING_MONTH, 2),
"sowing_doy" =       rep(SOWING_DOY, 2),
"harvest_rule" =     rep(HARVEST_RULE, 2),
"harvest_reason" = c(HARVEST_REAS_RF, HARVEST_REAS_IR),
"maturity_doy" =   c(HARVEST_DAY_RF, HARVEST_DAY_IR)  )
OUTPUT_DF <- rbind(OUTPUT_DF, PIXEL_DF)
cat(paste(COORD, sep = "\t"))
} # COORD
#-----------------------------------------------------------#
# Climate-driven sowing and harvest dates                   #
# R-Code                                                    #
# Written by Sara Minoli                                    #
# Based on Minoli et al. (2019) Global and Planetary Change #
#-----------------------------------------------------------#
#-----------------------------------------------------------#
# MAIN SCRIPT #
#-----------------------------------------------------------#
rm(list=ls(all=TRUE))
working.dir <- "D:/PROJECTS/GROWING_PERIODS_PACKAGE/"
# READ CONFIGURATION ----
#___________________________________________________________#
source(paste0(working.dir, "CODE/configuration/configuration.R"))
# IMPORT FUNCTIONS ----
#___________________________________________________________#
#source(paste0(working.dir, "CODE/src/compute_sow_harv_functions.R"))
source(paste0(working.dir, "CODE/src/simplified_functions_workinprogress.R"))
# SELECT SCENARIO ----
#___________________________________________________________#
# import argument from bash script
args <- 3
# select variable, crop, model
dbatch1 <- subset(dbatch, subset = (step1!=0)) # remove scenarios that are not needed in step1 pre-lpjml
rownames(dbatch1) <- NULL
dbatch2 <- dbatch1[args,]
GCM <- dbatch2$gcm
SCgp <- dbatch2$scenario.growp
SYgp <- dbatch2$syear.growp
EYgp <- dbatch2$eyear.growp
SCclm <- dbatch2$scenario.clm
SYclm <- dbatch2$syear.clm
EYclm <- dbatch2$eyear.clm
print(dbatch2)
# IMPORT CLIMATE DATA ----
#___________________________________________________________#
# get monthly climate data
cat(paste("Importing climate data of:", GCM, SCgp, SYgp, EYgp),
"-------------------------------------------------------", sep = "\n")
DTclm <- get(load(file = paste0(climate.dir, "DT_average_monthly_climate_", GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata")))
print(DTclm)
# LOOP OVER CROPS ----
#___________________________________________________________#
CROP <- "Maize"
# Get crop-specific parameters
crop_parameters <- subset(crop_parameters_all, subset = crop_name %in% CROP)
# LOOP OVER GRID ----
#___________________________________________________________#
#COORD <- 27997 # 46685
OUTPUT_DF <- NULL
for (COORD in c(1:NCELLS)) { # NCELLS
# Get coordinates of the grid cell
LON <- coord.df$lon[COORD]
LAT <- coord.df$lat[COORD]
# Get weather data of the grid cell
MTEMP <- DTclm[lon==LON & lat==LAT]$tas
MPREC <- DTclm[lon==LON & lat==LAT]$pr
MPPET <- DTclm[lon==LON & lat==LAT]$ppet
MPPET_DIFF <- MPPET-c(MPPET[-1], MPPET[1])
#print(DTclm[lon==LON & lat==LAT])
SEASONALITY <- calcSeasonality(MTEMP, MPPET, TEMPMIN)
SOWING <- calcSowingDate(crop_parameters, MTEMP, MPPET, SEASONALITY, LAT)
SOWING_MONTH  <- SOWING[["sowing_month"]]
SOWING_DOY    <- SOWING[["sowing_doy"]]
SOWING_SEASON <- SOWING[["sowing_season"]]
HARVEST_RULE  <- calcHarvestRule(crop_parameters, MTEMP, MPPET, SEASONALITY)
HARVEST_VECTOR  <- calcHarvestDateVector(crop_parameters, SOWING_DOY, SOWING_SEASON, MTEMP, MPPET, MPPET_DIFF)
HARVEST <- calcHarvestDate(crop_parameters, MTEMP, SOWING_DOY, SOWING_MONTH, SOWING_SEASON, SEASONALITY, HARVEST_RULE, HARVEST_VECTOR)
HARVEST_DAY_RF  <- HARVEST[["hd_rf"]]
HARVEST_DAY_IR  <- HARVEST[["hd_ir"]]
HARVEST_REAS_RF <- HARVEST[["harvest_reason_rf"]]
HARVEST_REAS_IR <- HARVEST[["harvest_reason_ir"]]
PIXEL_DF <- data.frame("lon" =    rep(LON, 2),
"lat" =    rep(LAT, 2),
"cft_id" = rep(crop_parameters$cft_id, 2),
"crop" =   rep(crop_parameters$crop_name, 2),
"water_mng" = c("rainfed", "irrigated"),
"seasonality_type" = rep(SEASONALITY, 2),
"sowing_season" =    rep(SOWING_SEASON, 2),
"sowing_month" =     rep(SOWING_MONTH, 2),
"sowing_doy" =       rep(SOWING_DOY, 2),
"harvest_rule" =     rep(HARVEST_RULE, 2),
"harvest_reason" = c(HARVEST_REAS_RF, HARVEST_REAS_IR),
"maturity_doy" =   c(HARVEST_DAY_RF, HARVEST_DAY_IR)  )
OUTPUT_DF <- rbind(OUTPUT_DF, PIXEL_DF)
cat(paste(COORD, sep = "  "))
} # COORD
#-----------------------------------------------------------#
# Climate-driven sowing and harvest dates                   #
# R-Code                                                    #
# Written by Sara Minoli                                    #
# Based on Minoli et al. (2019) Global and Planetary Change #
#-----------------------------------------------------------#
#-----------------------------------------------------------#
# MAIN SCRIPT #
#-----------------------------------------------------------#
rm(list=ls(all=TRUE))
working.dir <- "D:/PROJECTS/GROWING_PERIODS_PACKAGE/"
# READ CONFIGURATION ----
#___________________________________________________________#
source(paste0(working.dir, "CODE/configuration/configuration.R"))
# IMPORT FUNCTIONS ----
#___________________________________________________________#
#source(paste0(working.dir, "CODE/src/compute_sow_harv_functions.R"))
source(paste0(working.dir, "CODE/src/simplified_functions_workinprogress.R"))
# SELECT SCENARIO ----
#___________________________________________________________#
# import argument from bash script
args <- 3
# select variable, crop, model
dbatch1 <- subset(dbatch, subset = (step1!=0)) # remove scenarios that are not needed in step1 pre-lpjml
rownames(dbatch1) <- NULL
dbatch2 <- dbatch1[args,]
GCM <- dbatch2$gcm
SCgp <- dbatch2$scenario.growp
SYgp <- dbatch2$syear.growp
EYgp <- dbatch2$eyear.growp
SCclm <- dbatch2$scenario.clm
SYclm <- dbatch2$syear.clm
EYclm <- dbatch2$eyear.clm
print(dbatch2)
# IMPORT CLIMATE DATA ----
#___________________________________________________________#
# get monthly climate data
cat(paste("Importing climate data of:", GCM, SCgp, SYgp, EYgp),
"-------------------------------------------------------", sep = "\n")
DTclm <- get(load(file = paste0(climate.dir, "DT_average_monthly_climate_", GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata")))
print(DTclm)
# LOOP OVER CROPS ----
#___________________________________________________________#
CROP <- "Maize"
# Get crop-specific parameters
crop_parameters <- subset(crop_parameters_all, subset = crop_name %in% CROP)
# LOOP OVER GRID ----
#___________________________________________________________#
#COORD <- 27997 # 46685
OUTPUT_DF <- NULL
for (COORD in c(1:NCELLS)) { # NCELLS
# Get coordinates of the grid cell
LON <- coord.df$lon[COORD]
LAT <- coord.df$lat[COORD]
# Get weather data of the grid cell
MTEMP <- DTclm[lon==LON & lat==LAT]$tas
MPREC <- DTclm[lon==LON & lat==LAT]$pr
MPPET <- DTclm[lon==LON & lat==LAT]$ppet
MPPET_DIFF <- MPPET-c(MPPET[-1], MPPET[1])
#print(DTclm[lon==LON & lat==LAT])
SEASONALITY <- calcSeasonality(MTEMP, MPPET, TEMPMIN)
SOWING <- calcSowingDate(crop_parameters, MTEMP, MPPET, SEASONALITY, LAT)
SOWING_MONTH  <- SOWING[["sowing_month"]]
SOWING_DOY    <- SOWING[["sowing_doy"]]
SOWING_SEASON <- SOWING[["sowing_season"]]
HARVEST_RULE  <- calcHarvestRule(crop_parameters, MTEMP, MPPET, SEASONALITY)
HARVEST_VECTOR  <- calcHarvestDateVector(crop_parameters, SOWING_DOY, SOWING_SEASON, MTEMP, MPPET, MPPET_DIFF)
HARVEST <- calcHarvestDate(crop_parameters, MTEMP, SOWING_DOY, SOWING_MONTH, SOWING_SEASON, SEASONALITY, HARVEST_RULE, HARVEST_VECTOR)
HARVEST_DAY_RF  <- HARVEST[["hd_rf"]]
HARVEST_DAY_IR  <- HARVEST[["hd_ir"]]
HARVEST_REAS_RF <- HARVEST[["harvest_reason_rf"]]
HARVEST_REAS_IR <- HARVEST[["harvest_reason_ir"]]
PIXEL_DF <- data.frame("lon" =    rep(LON, 2),
"lat" =    rep(LAT, 2),
"cft_id" = rep(crop_parameters$cft_id, 2),
"crop" =   rep(crop_parameters$crop_name, 2),
"water_mng" = c("rainfed", "irrigated"),
"seasonality_type" = rep(SEASONALITY, 2),
"sowing_season" =    rep(SOWING_SEASON, 2),
"sowing_month" =     rep(SOWING_MONTH, 2),
"sowing_doy" =       rep(SOWING_DOY, 2),
"harvest_rule" =     rep(HARVEST_RULE, 2),
"harvest_reason" = c(HARVEST_REAS_RF, HARVEST_REAS_IR),
"maturity_doy" =   c(HARVEST_DAY_RF, HARVEST_DAY_IR)  )
OUTPUT_DF <- rbind(OUTPUT_DF, PIXEL_DF)
cat(COORD, "\t")
} # COORD
# croppar        <- crop_parameters
# monthly_temp   <- MTEMP
# sowing_date    <- SOWING_DOY
# sowing_month   <- SOWING_MONTH
# sowing_season  <- SOWING_SEASON
# seasonality    <- SEASONALITY
# harvest_rule   <- HARVEST_RULE
# hd_vector      <- HARVEST_VECTOR
save(OUTPUT_DF, file = paste0(output.dir, GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata"))
save(OUTPUT_DF, file = paste0(output.dir, "Crop_calendar_", GCM, "_", SCgp, "_", SYgp, "_", EYgp, ".Rdata"))
head(OUTPUT_DF)
dim(OUTPUT_DF)
dim(OUTPUT_DF)/1
dim(OUTPUT_DF)/2
